"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%qu%ighti-&un!1uab_2yqvhvxvl0n*2)#d_&!g!#pvfc1gf@z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False


#когато качвам сайта тук трябва да сложа домйна на който ще го кача
#трябва да добавя домейна 'localhost' като оправя payment page-a
#these are the hosts that are allowed to host the websitE
ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '.herokuapp.com']


# Application definition and installed apps

INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'store',
    'basket',
    'account',
    'payment',
    'orders',
]

#The middleware hooks into django's request/response processing (light, low-level “plugin” system for globally altering Django's input or output.)

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#This is the indicator that in the app core are the core urls for django
ROOT_URLCONF = 'core.urls'

#This is the template engine with django currently works with in this project(can be used other template engines)
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'store.context_processors.categories',
                'basket.context_processors.basket'
            ],
        },
    },
]

#Django's primary deployment platform

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '<database_name>',
        'USER': '<user_name>',
        'PASSWORD': '<password>',
        'HOST': 'localhost',
        'PORT': '',
    }
}

db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)
WHITENOISE_USE_FINDERS = True
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

#Basket sesion id
BASKET_SESSION_ID = 'basket'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'account.UserBase'
LOGIN_REDIRECT_URL = '/account/dashboard'
LOGIN_URL = '/account/login/'


#Stripe payment

STRIPE_ENDPOINT_SECRET = 'whsec_e1b9a950ded4fbbe1b05cb393c9271c84eb56d95afdd0b55eef09db6b7c3fe45'
SECRET_KEY = 'sk_test_51MNydQIae454BRv064cflrQ5ky9q87umR1gxcTuaDbC76Avz6Fu3qqVyOx7ZbVpx5yvP9wor4MTjqNA1ctv9qOGR00bOHTLezi'
PUBLISHABLE_KEY = 'pk_test_51MNydQIae454BRv0OrBiMfuCBjGU9XVLBQ6oeVlB7Xbt8wr4ZJIQDKFTpV6z1nfitxMqJ0R3ZKmNIxc0L0N6P0p300HORXZMTr'
#stripe listen --forward-to localhost:8000/payment/webhook


#Change 'django.core.mail.backends.smtp.EmailBackend' to 'django.core.mail.backends.cosnole.EmailBackend' if want to work with cosnole
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

#sending emails
EMAIL_HOST = 'smtp-mail.outlook.com'
EMAIL_PORT = '587'
EMAIL_HOST_USER = 'phoneaccessoriesbg@outlook.com'
EMAIL_HOST_PASSWORD = 'phoneacc123'
EMAIL_USE_TLS = True

DEFAULT_FROM_EMAIL = 'phoneaccessoriesbg@outlook.com'